#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.0 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 56 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1           0 853 0 29 3 10 #"#lang plai"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 23 #";;  Shield declaration:"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 25 3 1 #" "
0 0 14 3 6 #"Shield"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"Field"
0 0 25 3 2 #" ("
0 0 14 3 4 #"tinc"
0 0 25 3 1 #" "
0 0 14 3 12 #"image-color?"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"Upon"
0 0 25 3 2 #" ("
0 0 14 3 5 #"field"
0 0 25 3 1 #" "
0 0 14 3 7 #"Shield?"
0 0 25 3 3 #") ("
0 0 14 3 2 #"ch"
0 0 25 3 1 #" "
0 0 14 3 7 #"Charge?"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 15 #"Tierced-In-Fess"
0 0 25 3 2 #" ("
0 0 14 3 3 #"1st"
0 0 25 3 1 #" "
0 0 14 3 7 #"Shield?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 3 #"2nd"
0 0 25 3 1 #" "
0 0 14 3 7 #"Shield?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 3 #"3rd"
0 0 25 3 1 #" "
0 0 14 3 7 #"Shield?"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 8 #"Per-Fess"
0 0 25 3 2 #" ("
0 0 14 3 3 #"top"
0 0 25 3 1 #" "
0 0 14 3 7 #"Shield?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 6 #"bottom"
0 0 25 3 1 #" "
0 0 14 3 7 #"Shield?"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 8 #"Per-Pale"
0 0 25 3 2 #" ("
0 0 14 3 4 #"left"
0 0 25 3 1 #" "
0 0 14 3 7 #"Shield?"
0 0 25 3 3 #") ("
0 0 14 3 5 #"right"
0 0 25 3 1 #" "
0 0 14 3 7 #"Shield?"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"Quarterly"
0 0 25 3 2 #" ("
0 0 14 3 3 #"1st"
0 0 25 3 1 #" "
0 0 14 3 7 #"Shield?"
0 0 25 3 3 #") ("
0 0 14 3 3 #"2nd"
0 0 25 3 1 #" "
0 0 14 3 7 #"Shield?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 3 #"3rd"
0 0 25 3 1 #" "
0 0 14 3 7 #"Shield?"
0 0 25 3 3 #") ("
0 0 14 3 3 #"4th"
0 0 25 3 1 #" "
0 0 14 3 7 #"Shield?"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 21 #";; Charge declaration"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 25 3 1 #" "
0 0 14 3 6 #"Charge"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"Figure"
0 0 25 3 2 #" ("
0 0 14 3 4 #"name"
0 0 25 3 1 #" "
0 0 14 3 7 #"string?"
0 0 25 3 3 #") ("
0 0 14 3 4 #"tinc"
0 0 25 3 1 #" "
0 0 14 3 12 #"image-color?"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 19 #";; Tincture aliases"
0 0 25 29 1 #"\n"
0 0 17 3 35 #";; currently tincture is not a type"
0 0 25 29 1 #"\n"
0 0 17 3 39 #";; will be needed when we can draw furs"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 2 #"or"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"gules"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"azure"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"sable"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"argent"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"purpure"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 40 #";; Dimensions type used to keep track of"
0 0 25 29 1 #"\n"
0 0 17 3 22 #";; size of sub-shields"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 25 3 1 #" "
0 0 14 3 10 #"Dimensions"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"dim"
0 0 25 3 2 #" ("
0 0 14 3 5 #"width"
0 0 25 3 1 #" "
0 0 14 3 5 #"real?"
0 0 25 3 3 #") ("
0 0 14 3 6 #"height"
0 0 25 3 1 #" "
0 0 14 3 5 #"real?"
0 0 25 3 3 #") ("
0 0 14 3 9 #"font-size"
0 0 25 3 1 #" "
0 0 14 3 5 #"real?"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"init-dims"
0 0 25 3 2 #" ("
0 0 14 3 3 #"dim"
0 0 25 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 25 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 2 #"d/"
0 0 25 3 1 #" "
0 0 14 3 4 #"dims"
0 0 25 3 1 #" "
0 0 14 3 7 #"divisor"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 9 #"type-case"
0 0 25 3 1 #" "
0 0 14 3 10 #"Dimensions"
0 0 25 3 1 #" "
0 0 14 3 4 #"dims"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"dim"
0 0 25 3 2 #" ("
0 0 14 3 5 #"width"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 1 #" "
0 0 14 3 9 #"font-size"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 3 #"dim"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 1 #" "
0 0 14 3 7 #"divisor"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 1 #" "
0 0 14 3 7 #"divisor"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 9 #"font-size"
0 0 25 3 1 #" "
0 0 14 3 7 #"divisor"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 3 #"avg"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 2 #") "
0 0 22 3 1 #"2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"d/xy"
0 0 25 3 1 #" "
0 0 14 3 4 #"dims"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 9 #"type-case"
0 0 25 3 1 #" "
0 0 14 3 10 #"Dimensions"
0 0 25 3 1 #" "
0 0 14 3 4 #"dims"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"dim"
0 0 25 3 2 #" ("
0 0 14 3 5 #"width"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 1 #" "
0 0 14 3 9 #"font-size"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 3 #"dim"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 9 #"font-size"
0 0 25 3 2 #" ("
0 0 14 3 3 #"avg"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"draw-charge"
0 0 25 3 1 #" "
0 0 14 3 2 #"ch"
0 0 25 3 1 #" "
0 0 14 3 4 #"dims"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 9 #"type-case"
0 0 25 3 1 #" "
0 0 14 3 6 #"Charge"
0 0 25 3 1 #" "
0 0 14 3 2 #"ch"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 6 #"Figure"
0 0 25 3 2 #" ("
0 0 14 3 4 #"name"
0 0 25 3 1 #" "
0 0 14 3 4 #"tinc"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 7 #"overlay"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 4 #"text"
0 0 25 3 1 #" "
0 0 14 3 4 #"name"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 9 #"rectangle"
0 0 25 3 2 #" ("
0 0 14 3 9 #"dim-width"
0 0 25 3 1 #" "
0 0 14 3 4 #"dims"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 10 #"dim-height"
0 0 25 3 1 #" "
0 0 14 3 4 #"dims"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                        "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 14 3 4 #"tinc"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"             ))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"draw-shield"
0 0 25 3 1 #" "
0 0 14 3 6 #"shield"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 25 3 3 #" [("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 18 #"draw-shield-helper"
0 0 25 3 1 #" "
0 0 14 3 6 #"shield"
0 0 25 3 1 #" "
0 0 14 3 4 #"dims"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 15 3 9 #"type-case"
0 0 25 3 1 #" "
0 0 14 3 6 #"Shield"
0 0 25 3 1 #" "
0 0 14 3 6 #"shield"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 5 #"Field"
0 0 25 3 2 #" ("
0 0 14 3 4 #"tinc"
0 0 25 3 3 #") ("
0 0 14 3 9 #"rectangle"
0 0 25 3 2 #" ("
0 0 14 3 9 #"dim-width"
0 0 25 3 1 #" "
0 0 14 3 4 #"dims"
0 0 25 3 3 #") ("
0 0 14 3 10 #"dim-height"
0 0 25 3 1 #" "
0 0 14 3 4 #"dims"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 14 3 4 #"tinc"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"Upon"
0 0 25 3 2 #" ("
0 0 14 3 10 #"sub-shield"
0 0 25 3 1 #" "
0 0 14 3 2 #"ch"
0 0 25 3 3 #") ("
0 0 14 3 7 #"overlay"
0 0 25 3 2 #" ("
0 0 14 3 11 #"draw-charge"
0 0 25 3 1 #" "
0 0 14 3 2 #"ch"
0 0 25 3 2 #" ("
0 0 14 3 2 #"d/"
0 0 25 3 1 #" "
0 0 14 3 4 #"dims"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 18 #"draw-shield-helper"
0 0 25 3 1 #" "
0 0 14 3 10 #"sub-shield"
0 0 25 3 1 #" "
0 0 14 3 4 #"dims"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 15 #"Tierced-In-Fess"
0 0 25 3 2 #" ("
0 0 14 3 3 #"1st"
0 0 25 3 1 #" "
0 0 14 3 3 #"2nd"
0 0 25 3 1 #" "
0 0 14 3 3 #"3rd"
0 0 25 3 3 #") ("
0 0 14 3 5 #"above"
0 0 25 3 2 #" ("
0 0 14 3 18 #"draw-shield-helper"
0 0 25 3 1 #" "
0 0 14 3 3 #"1st"
0 0 25 3 2 #" ("
0 0 14 3 4 #"d/xy"
0 0 25 3 1 #" "
0 0 14 3 4 #"dims"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 44 #"                                           ("
0 0 14 3 18 #"draw-shield-helper"
0 0 25 3 1 #" "
0 0 14 3 3 #"2nd"
0 0 25 3 2 #" ("
0 0 14 3 4 #"d/xy"
0 0 25 3 1 #" "
0 0 14 3 4 #"dims"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 44 #"                                           ("
0 0 14 3 18 #"draw-shield-helper"
0 0 25 3 1 #" "
0 0 14 3 3 #"3rd"
0 0 25 3 2 #" ("
0 0 14 3 4 #"d/xy"
0 0 25 3 1 #" "
0 0 14 3 4 #"dims"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 8 #"Per-Fess"
0 0 25 3 2 #" ("
0 0 14 3 3 #"top"
0 0 25 3 1 #" "
0 0 14 3 6 #"bottom"
0 0 25 3 3 #") ("
0 0 14 3 5 #"above"
0 0 25 3 2 #" ("
0 0 14 3 18 #"draw-shield-helper"
0 0 25 3 1 #" "
0 0 14 3 3 #"top"
0 0 25 3 2 #" ("
0 0 14 3 4 #"d/xy"
0 0 25 3 1 #" "
0 0 14 3 4 #"dims"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 18 #"draw-shield-helper"
0 0 25 3 1 #" "
0 0 14 3 6 #"bottom"
0 0 25 3 2 #" ("
0 0 14 3 4 #"d/xy"
0 0 25 3 1 #" "
0 0 14 3 4 #"dims"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 8 #"Per-Pale"
0 0 25 3 2 #" ("
0 0 14 3 4 #"left"
0 0 25 3 1 #" "
0 0 14 3 5 #"right"
0 0 25 3 3 #") ("
0 0 14 3 6 #"beside"
0 0 25 3 2 #" ("
0 0 14 3 18 #"draw-shield-helper"
0 0 25 3 1 #" "
0 0 14 3 4 #"left"
0 0 25 3 2 #" ("
0 0 14 3 4 #"d/xy"
0 0 25 3 1 #" "
0 0 14 3 4 #"dims"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 18 #"draw-shield-helper"
0 0 25 3 1 #" "
0 0 14 3 5 #"right"
0 0 25 3 2 #" ("
0 0 14 3 4 #"d/xy"
0 0 25 3 1 #" "
0 0 14 3 4 #"dims"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 9 #"Quarterly"
0 0 25 3 2 #" ("
0 0 14 3 3 #"1st"
0 0 25 3 1 #" "
0 0 14 3 3 #"2nd"
0 0 25 3 1 #" "
0 0 14 3 3 #"3rd"
0 0 25 3 1 #" "
0 0 14 3 3 #"4th"
0 0 25 3 3 #") ("
0 0 14 3 18 #"draw-shield-helper"
0 0 25 3 2 #" ("
0 0 14 3 8 #"Per-Fess"
0 0 25 29 1 #"\n"
0 0 25 3 56 #"                                                       ("
0 0 14 3 8 #"Per-Pale"
0 0 25 3 1 #" "
0 0 14 3 3 #"1st"
0 0 25 3 1 #" "
0 0 14 3 3 #"2nd"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 56 #"                                                       ("
0 0 14 3 8 #"Per-Pale"
0 0 25 3 1 #" "
0 0 14 3 3 #"3rd"
0 0 25 3 1 #" "
0 0 14 3 3 #"4th"
0 0 25 3 4 #"))) "
0 0 14 3 4 #"dims"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 18 #"draw-shield-helper"
0 0 25 3 1 #" "
0 0 14 3 6 #"shield"
0 0 25 3 1 #" "
0 0 14 3 9 #"init-dims"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"SCOTLAND"
0 0 25 3 2 #" ("
0 0 14 3 4 #"Upon"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Field"
0 0 25 3 1 #" "
0 0 14 3 2 #"or"
0 0 25 3 3 #") ("
0 0 14 3 6 #"Figure"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"lion\""
0 0 25 3 1 #" "
0 0 14 3 5 #"gules"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"LEOPARD"
0 0 25 3 2 #" ("
0 0 14 3 4 #"Upon"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Field"
0 0 25 3 1 #" "
0 0 14 3 5 #"gules"
0 0 25 3 3 #") ("
0 0 14 3 6 #"Figure"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"lion\""
0 0 25 3 1 #" "
0 0 14 3 2 #"or"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"ENGLAND"
0 0 25 3 2 #" ("
0 0 14 3 15 #"Tierced-In-Fess"
0 0 25 3 1 #" "
0 0 14 3 7 #"LEOPARD"
0 0 25 3 1 #" "
0 0 14 3 7 #"LEOPARD"
0 0 25 3 1 #" "
0 0 14 3 7 #"LEOPARD"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"IRELAND"
0 0 25 3 2 #" ("
0 0 14 3 4 #"Upon"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Field"
0 0 25 3 1 #" "
0 0 14 3 5 #"azure"
0 0 25 3 3 #") ("
0 0 14 3 6 #"Figure"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"harp\""
0 0 25 3 1 #" "
0 0 14 3 2 #"or"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"QUEBEC"
0 0 25 3 2 #" ("
0 0 14 3 4 #"Upon"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Field"
0 0 25 3 1 #" "
0 0 14 3 5 #"azure"
0 0 25 3 3 #") ("
0 0 14 3 6 #"Figure"
0 0 25 3 1 #" "
0 0 19 3 15 #"\"fleurs-de-lis\""
0 0 25 3 1 #" "
0 0 14 3 6 #"argent"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"MAPLE-LEAVES"
0 0 25 3 2 #" ("
0 0 14 3 4 #"Upon"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Field"
0 0 25 3 1 #" "
0 0 14 3 6 #"argent"
0 0 25 3 3 #") ("
0 0 14 3 6 #"Figure"
0 0 25 3 1 #" "
0 0 19 3 14 #"\"maple-leaves\""
0 0 25 3 1 #" "
0 0 14 3 5 #"gules"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 11 #"draw-shield"
0 0 25 3 2 #" ("
0 0 14 3 15 #"Tierced-In-Fess"
0 0 25 3 2 #" ("
0 0 14 3 8 #"Per-Pale"
0 0 25 3 1 #" "
0 0 14 3 7 #"ENGLAND"
0 0 25 3 1 #" "
0 0 14 3 8 #"SCOTLAND"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                              ("
0 0 14 3 8 #"Per-Pale"
0 0 25 3 1 #" "
0 0 14 3 7 #"IRELAND"
0 0 25 3 1 #" "
0 0 14 3 6 #"QUEBEC"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                              "
0 0 14 3 12 #"MAPLE-LEAVES"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 25 #";(define (top-half image)"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";  (scale/xy 1 2 (crop 0"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";        0"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";        (image-width image)"
0 0 25 29 1 #"\n"
0 0 17 3 34 #";        (/ (image-width image) 2)"
0 0 25 29 1 #"\n"
0 0 17 3 17 #";        image)))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";(define (bottom-half image)"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";  (scale/xy 1 2 (crop 0"
0 0 25 29 1 #"\n"
0 0 17 3 35 #";        (/ (image-height image) 2)"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";        (image-width image)"
0 0 25 29 1 #"\n"
0 0 17 3 35 #";        (/ (image-height image) 2)"
0 0 25 29 1 #"\n"
0 0 17 3 17 #";        image)))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 48 #";(define (the-first-and-second-containing field)"
0 0 25 29 1 #"\n"
0 0 17 3 25 #";  (list (top-half field)"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";        (bottom-half field)))"
0 0 25 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 25 29 1 #"\n"
0 0 17 3 27 #";(define (a charge) charge)"
0 0 25 29 1 #"\n"
0 0 17 3 43 #";(define (two charge) (list charge charge))"
0 0 25 29 1 #"\n"
0 0 17 3 52 #";(define (three charge) (list charge charge charge))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 6           4 22 11316
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 1.5 0 #(struct:overlay #(struct:translate 0 7.1054273576010"
 #"02e-15 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 25.0 0.611111"
 #"1111111107 #(struct:overlay #(struct:translate 10.0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:translate 2.0 10.5 #("
 #"struct:text \"l\" 0 1 \"black\" 20 #f swiss normal normal #f))) #(st"
 #"ruct:translate 4.0 0.0 #(struct:translate 2.0 10.5 #(struct:text \"i"
 #"\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(struct:translat"
 #"e 8.0 0.0 #(struct:translate 5.5 10.5 #(struct:text \"o\" 0 1 \"blac"
 #"k\" 20 #f swiss normal normal #f))))) #(struct:translate 19.0 0.0 #("
 #"struct:translate 5.5 10.5 #(struct:text \"n\" 0 1 \"black\" 20 #f sw"
 #"iss normal normal #f))))) #(struct:translate 0 4.944444444444445 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 5"
 #"0 100/9 0 0) #(struct:pulled-point 0 0 0 100/9 0 0)) 255 \"yellow\")"
 #")))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 "
 #"0 0) #(struct:pulled-point 0 0 100 200/9 0 0) #(struct:pulled-point "
 #"0 0 0 200/9 0 0)) 255 \"red\"))))) #(struct:translate 0.0 22.2222222"
 #"2222222 #(struct:overlay #(struct:translate 25.0 0.6111111111111107 "
 #"#(struct:overlay #(struct:translate 10.0 0 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:translate 2.0 10.5 #(struct:text"
 #" \"l\" 0 1 \"black\" 20 #f swiss normal normal #f))) #(struct:transl"
 #"ate 4.0 0.0 #(struct:translate 2.0 10.5 #(struct:text \"i\" 0 1 \"bl"
 #"ack\" 20 #f swiss normal normal #f))))) #(struct:translate 8.0 0.0 #"
 #"(struct:translate 5.5 10.5 #(struct:text \"o\" 0 1 \"black\" 20 #f s"
 #"wiss normal normal #f))))) #(struct:translate 19.0 0.0 #(struct:tran"
 #"slate 5.5 10.5 #(struct:text \"n\" 0 1 \"black\" 20 #f swiss normal "
 #"normal #f))))) #(struct:translate 0 4.944444444444445 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(stru"
 #"ct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 100/9 0 0"
 #") #(struct:pulled-point 0 0 0 100/9 0 0)) 255 \"yellow\"))))) #(stru"
 #"ct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(stru"
 #"ct:pulled-point 0 0 100 200/9 0 0) #(struct:pulled-point 0 0 0 200/9"
 #" 0 0)) 255 \"red\"))))))) #(struct:translate 0.0 44.44444444444444 #"
 #"(struct:overlay #(struct:translate 25.0 0.6111111111111107 #(struct:"
 #"overlay #(struct:translate 10.0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:translate 2.0 10.5 #(struct:text \"l\" 0 "
 #"1 \"black\" 20 #f swiss normal normal #f))) #(struct:translate 4.0 0"
 #".0 #(struct:translate 2.0 10.5 #(struct:text \"i\" 0 1 \"black\" 20 "
 #"#f swiss normal normal #f))))) #(struct:translate 8.0 0.0 #(struct:t"
 #"ranslate 5.5 10.5 #(struct:text \"o\" 0 1 \"black\" 20 #f swiss norm"
 #"al normal #f))))) #(struct:translate 19.0 0.0 #(struct:translate 5.5"
 #" 10.5 #(struct:text \"n\" 0 1 \"black\" 20 #f swiss normal normal #f"
 #"))))) #(struct:translate 0 4.944444444444445 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 100/9 0 0) #(struc"
 #"t:pulled-point 0 0 0 100/9 0 0)) 255 \"yellow\"))))) #(struct:transl"
 #"ate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled"
 #"-point 0 0 100 200/9 0 0) #(struct:pulled-point 0 0 0 200/9 0 0)) 25"
 #"5 \"red\"))))))) #(struct:translate 100.0 0 #(struct:overlay #(struc"
 #"t:translate 25.0 16.666666666666668 #(struct:overlay #(struct:transl"
 #"ate 10.0 6.166666666666668 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:translate 2.0 10.5 #(struct:text \"l\" 0 1 \"bla"
 #"ck\" 20 #f swiss normal normal #f))) #(struct:translate 4.0 0.0 #(st"
 #"ruct:translate 2.0 10.5 #(struct:text \"i\" 0 1 \"black\" 20 #f swis"
 #"s normal normal #f))))) #(struct:translate 8.0 0.0 #(struct:translat"
 #"e 5.5 10.5 #(struct:text \"o\" 0 1 \"black\" 20 #f swiss normal norm"
 #"al #f))))) #(struct:translate 19.0 0.0 #(struct:translate 5.5 10.5 #"
 #"(struct:text \"n\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #"
 #"(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #("
 #"struct:pulled-point 0 0 50 100/3 0 0) #(struct:pulled-point 0 0 0 10"
 #"0/3 0 0)) 255 \"red\"))))) #(struct:translate 0 0 #(struct:translate"
 #" 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:p"
 #"ulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 200/3 0 0) "
 #"#(struct:pulled-point 0 0 0 200/3 0 0)) 255 \"yellow\"))))))) #(stru"
 #"ct:translate 0 66.66666666666667 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 25.0 16.666666666666668 #(s"
 #"truct:overlay #(struct:translate 5.0 6.166666666666668 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:translate 5.5 10.5 #"
 #"(struct:text \"h\" 0 1 \"black\" 20 #f swiss normal normal #f))) #(s"
 #"truct:translate 11.0 0.0 #(struct:"
 #"translate 5.5 10.5 #(struct:text \"a\" 0 1 \"black\" 20 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 22.0 0.0 #(struct:translate 3."
 #"5 10.5 #(struct:text \"r\" 0 1 \"black\" 20 #f swiss normal normal #"
 #"f))))) #(struct:translate 29.0 0.0 #(struct:translate 5.5 10.5 #(str"
 #"uct:text \"p\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(str"
 #"uct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(stru"
 #"ct:pulled-point 0 0 50 100/3 0 0) #(struct:pulled-point 0 0 0 100/3 "
 #"0 0)) 255 \"yellow\"))))) #(struct:translate 0 0 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 200/3 0 0) #"
 #"(struct:pulled-point 0 0 0 200/3 0 0)) 255 \"blue\"))))) #(struct:tr"
 #"anslate 100.0 0.0 #(struct:overlay #(struct:translate 0 16.666666666"
 #"666668 #(struct:overlay #(struct:translate 0 6.166666666666668 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:translate 3.0 10.5 #(struct:text \"f\" 0 1 \"black\" 20 #f s"
 #"wiss normal normal #f))) #(struct:translate 6.0 0.0 #(struct:transla"
 #"te 2.0 10.5 #(struct:text \"l\" 0 1 \"black\" 20 #f swiss normal nor"
 #"mal #f))))) #(struct:translate 10.0 0.0 #(struct:translate 5.5 10.5 "
 #"#(struct:text \"e\" 0 1 \"black\" 20 #f swiss normal normal #f))))) "
 #"#(struct:translate 21.0 0.0 #(struct:translate 5.5 10.5 #(struct:tex"
 #"t \"u\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 32.0 0.0 #(struct:translate 3.5 10.5 #(struct:text \"r\" 0 1 "
 #"\"black\" 20 #f swiss normal normal #f))))) #(struct:translate 39.0 "
 #"0.0 #(struct:translate 5.0 10.5 #(struct:text \"s\" 0 1 \"black\" 20"
 #" #f swiss normal normal #f))))) #(struct:translate 49.0 0.0 #(struct"
 #":translate 3.5 10.5 #(struct:text \"-\" 0 1 \"black\" 20 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 56.0 0.0 #(struct:translate 5"
 #".5 10.5 #(struct:text \"d\" 0 1 \"black\" 20 #f swiss normal normal "
 #"#f))))) #(struct:translate 67.0 0.0 #(struct:translate 5.5 10.5 #(st"
 #"ruct:text \"e\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 78.0 0.0 #(struct:translate 3.5 10.5 #(struct:text \""
 #"-\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(struct:transla"
 #"te 85.0 0.0 #(struct:translate 2.0 10.5 #(struct:text \"l\" 0 1 \"bl"
 #"ack\" 20 #f swiss normal normal #f))))) #(struct:translate 89.0 0.0 "
 #"#(struct:translate 2.0 10.5 #(struct:text \"i\" 0 1 \"black\" 20 #f "
 #"swiss normal normal #f))))) #(struct:translate 93.0 0.0 #(struct:tra"
 #"nslate 5.0 10.5 #(struct:text \"s\" 0 1 \"black\" 20 #f swiss normal"
 #" normal #f))))) #(struct:translate 26.5 0 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 100/3 0 0) #(struct:p"
 #"ulled-point 0 0 0 100/3 0 0)) 255 \"white\"))))) #(struct:translate "
 #"1.5 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-p"
 #"oint 0 0 100 200/3 0 0) #(struct:pulled-point 0 0 0 200/3 0 0)) 255 "
 #"\"blue\"))))))))) #(struct:translate 1.5 133.33333333333334 #(struct"
 #":overlay #(struct:translate 41.0 16.666666666666668 #(struct:overlay"
 #" #(struct:translate 0 6.166666666666668 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:translate 8.5 10.5 #(struct:text \"m\" 0 1 \"black\" 20"
 #" #f swiss normal normal #f))) #(struct:translate 17.0 0.0 #(struct:t"
 #"ranslate 5.5 10.5 #(struct:text \"a\" 0 1 \"black\" 20 #f swiss norm"
 #"al normal #f))))) #(struct:translate 28.0 0.0 #(struct:translate 5.5"
 #" 10.5 #(struct:text \"p\" 0 1 \"black\" 20 #f swiss normal normal #f"
 #"))))) #(struct:translate 39.0 0.0 #(struct:translate 2.0 10.5 #(stru"
 #"ct:text \"l\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 43.0 0.0 #(struct:tr"
 #"anslate 5.5 10.5 #(struct:text \"e\" 0 1 \"black\" 20 #f swiss norma"
 #"l normal #f))))) #(struct:translate 54.0 0.0 #(struct:translate 3.5 "
 #"10.5 #(struct:text \"-\" 0 1 \"black\" 20 #f swiss normal normal #f)"
 #")))) #(struct:translate 61.0 0.0 #(struct:translate 2.0 10.5 #(struc"
 #"t:text \"l\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(struc"
 #"t:translate 65.0 0.0 #(struct:translate 5.5 10.5 #(struct:text \"e\""
 #" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(struct:translate "
 #"76.0 0.0 #(struct:translate 5.5 10.5 #(struct:text \"a\" 0 1 \"black"
 #"\" 20 #f swiss normal normal #f))))) #(struct:translate 87.0 0.0 #(s"
 #"truct:translate 5.0 10.5 #(struct:text \"v\" 0 1 \"black\" 20 #f swi"
 #"ss normal normal #f))))) #(struct:translate 97.0 0.0 #(struct:transl"
 #"ate 5.5 10.5 #(struct:text \"e\" 0 1 \"black\" 20 #f swiss normal no"
 #"rmal #f))))) #(struct:translate 108.0 0.0 #(struct:translate 5.0 10."
 #"5 #(struct:text \"s\" 0 1 \"black\" 20 #f swiss normal normal #f))))"
 #") #(struct:translate 9.0 0 #(struct:translate 0 0 #(struct:polygon ("
 #"#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0"
 #" 0) #(struct:pulled-point 0 0 100 100/3 0 0) #(struct:pulled-point 0"
 #" 0 0 100/3 0 0)) 255 \"red\"))))) #(struct:translate 0 0 #(struct:tr"
 #"anslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(s"
 #"truct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 200/"
 #"3 0 0) #(struct:pulled-point 0 0 0 200/3 0 0)) 255 \"white\")))))) #"
 #"(struct:bb 203.0 200.0 200.0) #f)"
) 0           0
